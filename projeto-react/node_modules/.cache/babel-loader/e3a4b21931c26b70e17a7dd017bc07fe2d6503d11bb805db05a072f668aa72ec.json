{"ast":null,"code":"var _jsxFileName = \"/Users/ralfschwederdelima/Desktop/Temp/projeto-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [registros, setRegistros] = useState([]);\n  const [nome, setNome] = useState('');\n  const [idade, setIdade] = useState('');\n\n  // Função para obter todos os registros da API\n  const obterRegistros = () => {\n    fetch('http://localhost:8080').then(response => response.json()).then(data => setRegistros(data)).catch(error => console.error('Erro ao obter registros:', error));\n  };\n\n  // Função para cadastrar uma pessoa na API\n  const cadastrar = () => {\n    const pessoa = {\n      nome,\n      idade\n    };\n    fetch('http://localhost:8080', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(pessoa)\n    }).then(response => response.json()).then(data => {\n      setRegistros([...registros, data]);\n      setNome('');\n      setIdade('');\n    }).catch(error => console.error('Erro ao cadastrar pessoa:', error));\n  };\n  useEffect(() => {\n    obterRegistros();\n  }, []); // Executa apenas uma vez no carregamento inicial\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome\",\n        value: nome,\n        onChange: e => setNome(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Idade\",\n        value: idade,\n        onChange: e => setIdade(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cadastrar,\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Idade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: registros.map((registro, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: registro.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: registro.idade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uJpwnXUzJM5oIF+a0BBGGiYRMao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","registros","setRegistros","nome","setNome","idade","setIdade","obterRegistros","fetch","then","response","json","data","catch","error","console","cadastrar","pessoa","method","headers","body","JSON","stringify","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","map","registro","index","_c","$RefreshReg$"],"sources":["/Users/ralfschwederdelima/Desktop/Temp/projeto-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [registros, setRegistros] = useState([]);\n  const [nome, setNome] = useState('');\n  const [idade, setIdade] = useState('');\n\n  // Função para obter todos os registros da API\n  const obterRegistros = () => {\n    fetch('http://localhost:8080')\n      .then(response => response.json())\n      .then(data => setRegistros(data))\n      .catch(error => console.error('Erro ao obter registros:', error));\n  };\n\n  // Função para cadastrar uma pessoa na API\n  const cadastrar = () => {\n    const pessoa = { nome, idade };\n\n    fetch('http://localhost:8080', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(pessoa)\n    })\n      .then(response => response.json())\n      .then(data => {\n        setRegistros([...registros, data]);\n        setNome('');\n        setIdade('');\n      })\n      .catch(error => console.error('Erro ao cadastrar pessoa:', error));\n  };\n\n  useEffect(() => {\n    obterRegistros();\n  }, []); // Executa apenas uma vez no carregamento inicial\n\n  return (\n    <div>\n      {/* Formulário */}\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Nome\"\n          value={nome}\n          onChange={e => setNome(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Idade\"\n          value={idade}\n          onChange={e => setIdade(e.target.value)}\n        />\n        <button type=\"button\" onClick={cadastrar}>\n          Cadastrar\n        </button>\n      </form>\n\n      {/* Tabela */}\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Nome</th>\n            <th>Idade</th>\n          </tr>\n        </thead>\n        <tbody>\n          {registros.map((registro, index) => (\n            <tr key={index}>\n              <td>{registro.nome}</td>\n              <td>{registro.idade}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}